{"version":3,"sources":["testSketch.js","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["testSketch","p","setup","createCanvas","windowWidth","windowHeight","WEBGL","draw","background","circle","mouseX","mouseY","App","props","state","rotation","e","this","setState","target","value","sketch","type","min","max","step","onInput","rotationChange","bind","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAgCeA,EAhCI,SAACC,GAGhBA,EAAEC,MAAQ,WACRD,EAAEE,aAAaF,EAAEG,YAAaH,EAAEI,aAAcJ,EAAEK,QAqBlDL,EAAEM,KAAO,WACPN,EAAEO,WAAW,IAAK,IAAK,KACvBP,EAAEQ,OAAOR,EAAES,OAAQT,EAAEU,OAAQ,M,GC3BpB,I,YCkCAC,E,kDAxBb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,SAAU,IAHK,E,kDAQnB,SAAeC,GACbC,KAAKC,SAAS,CAACH,SAASC,EAAEG,OAAOC,U,oBAKnC,WACE,OACI,gCACE,cAAC,IAAD,CAAWC,OAAQrB,EAAYe,SAAUE,KAAKH,MAAMC,WACpD,uBAAOO,KAAK,QAAQF,MAAOH,KAAKH,MAAMC,SAAWQ,IAAI,IAAKC,IAAI,MAAMC,KAAK,IAAIC,QAAST,KAAKU,eAAeC,KAAKX,e,GArBvGY,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e88a7255.chunk.js","sourcesContent":["const testSketch = (p) => {\n    let rotation = 0\n\n    p.setup = () => {\n      p.createCanvas(p.windowWidth, p.windowHeight, p.WEBGL)\n    }\n\n    // //P5Wrapperコンポーネントからのpropsの受け渡し\n    // p.myCustomRedrawAccordingToNewPropsHandler = (props) => {\n    //     if (props.rotation){\n    //         rotation = props.rotation * Math.PI / 180\n    //     }\n    // }\n\n    // //毎フレームごとの描画内容\n    // p.draw = () => {\n    //     p.background(100)\n    //     p.normalMaterial()\n    //     p.noStroke()\n    //     p.push()\n    //     p.rotateY(rotation)\n    //     p.box(100)\n    //     p.pop()\n    // }\n\n    p.draw = () => {\n      p.background(230, 230, 255);\n      p.circle(p.mouseX, p.mouseY, 40);\n    }\n\n}\n\nexport default testSketch\n\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","// import React from 'react'\nimport React, { Component } from 'react'\nimport P5Wrapper from 'react-p5-wrapper'\nimport testSketch from './testSketch'\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component{\n\n  //初期値を45°に設定\n  constructor(props) {\n    super(props)\n    this.state = {\n      rotation: 45,\n    }\n  }\n\n  //バーの値が変化するごとに回転角を変更\n  rotationChange(e){\n    this.setState({rotation:e.target.value});\n  }\n\n  //コンポーネントの描画\n  //生成されるcanvasの下にバーを置く\n  render () {\n    return (\n        <div>\n          <P5Wrapper sketch={testSketch} rotation={this.state.rotation} />\n          <input type=\"range\" value={this.state.rotation}  min=\"0\"  max=\"360\" step=\"1\" onInput={this.rotationChange.bind(this)}/>\n        </div>\n    )\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}