{"version":3,"sources":["testSketch.js","App.js","reportWebVitals.js","index.js"],"names":["testSketch","p","setup","createCanvas","draw","mouseIsPressed","circle","mouseX","mouseY","App","sketch","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAmCeA,EAnCI,SAACC,GAGhBA,EAAEC,MAAQ,WAERD,EAAEE,aAAa,IAAK,MAqBtBF,EAAEG,KAAO,YAEkB,IAArBH,EAAEI,gBAEJJ,EAAEK,OAAOL,EAAEM,OAAQN,EAAEO,OAAQ,M,eCOtBC,E,4JAbb,WACE,OACE,cAAC,IAAD,CAAWC,OAAQV,Q,GAnBPW,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.edc860b6.chunk.js","sourcesContent":["const testSketch = (p) => {\n    // let rotation = 0\n\n    p.setup = () => {\n      // p.createCanvas(p.windowWidth, p.windowHeight, p.WEBGL)\n      p.createCanvas(900, 900)\n    }\n\n    // //P5Wrapperコンポーネントからのpropsの受け渡し\n    // p.myCustomRedrawAccordingToNewPropsHandler = (props) => {\n    //     if (props.rotation){\n    //         rotation = props.rotation * Math.PI / 180\n    //     }\n    // }\n\n    // //毎フレームごとの描画内容\n    // p.draw = () => {\n    //     p.background(100)\n    //     p.normalMaterial()\n    //     p.noStroke()\n    //     p.push()\n    //     p.rotateY(rotation)\n    //     p.box(100)\n    //     p.pop()\n    // }\n\n    p.draw = () => {\n      // p.background(230, 230, 255);\n      if (p.mouseIsPressed === true) {\n        // 円をカーソルの位置に描く\n        p.circle(p.mouseX, p.mouseY, 10);\n      }\n    }\n}\n\nexport default testSketch\n\n","// import React from 'react'\nimport React, { Component } from 'react'\nimport P5Wrapper from 'react-p5-wrapper'\nimport testSketch from './testSketch'\n// import logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component{\n\n  // //初期値を45°に設定\n  // constructor(props) {\n  //   super(props)\n  //   this.state = {\n  //     rotation: 45,\n  //   }\n  // }\n\n  // //バーの値が変化するごとに回転角を変更\n  // rotationChange(e){\n  //   this.setState({rotation:e.target.value});\n  // }\n\n  //コンポーネントの描画\n  //生成されるcanvasの下にバーを置く\n  render () {\n    return (\n      <P5Wrapper sketch={testSketch} />\n    )\n    // return (\n    //     <div>\n    //       <P5Wrapper sketch={testSketch} rotation={this.state.rotation} />\n    //       <input type=\"range\" value={this.state.rotation}  min=\"0\"  max=\"360\" step=\"1\" onInput={this.rotationChange.bind(this)}/>\n    //     </div>\n    // )\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}